#first we need to create an object that binds the transcript names to the gene names. For some reason, the gene_ID is not being pulled in even though it is present in the gtf file
library(readr)
library(tximport)
library(GenomicFeatures)
library(rtracklayer)
library(biomaRt)
library(dplyr)
library(ggplot2)
library(ggrepel)

#first we need to convert the gtf to a dataframe on import:
library(biomaRt)
GTF_files <- system.file("extdata", "GTF_files", package="GenomicFeatures")
path <- file.path(GTF_files, "MvBLg_v2.0.gtf")
gtf <- rtracklayer::import(path)
gtf_df=as.data.frame(gtf)
View(gtf_df)

#Genomic features will not accept NA values in the transcript ID or gene ID columns, so next we need to subset the data using dplyr:
CDS_df <- subset(gtf_df, type == "CDS")
exon_df <- subset(gtf_df, type == "exon")
gene_df <- subset(gtf_df, type == "gene")
transcript_df <- subset(gtf_df, type == "transcript")

#now we have a data frame with no NA values in either column. 

#next we need to build the txdb object manually using makeTxDb(). Note that this is somewhat rare, but it's the only way I could get around the issue with the NA values.
#I couldn't get this method to work because the R package expects integer vectors in the transcript_id column, and I wasn't able to change them from character vectors.

#transcripts <- data.frame(
    tx_id=transcript_df$transcript_id,
    tx_chrom=transcript_df$seqnames,
    tx_strand= transcript_df$strand,
    tx_start=transcript_df$start,
    tx_end=transcript_df$end)
#splicings <-  data.frame(
    tx_id=exon_df$transcript_id,
    exon_rank=exon_df$start,
    exon_start=exon_df$start,
    exon_end=exon_df$end)
#txdb <- makeTxDb(transcripts, splicings)

###This is a response from biostars (https://www.biostars.org/p/9485199/) did work because it selects by type. This is what I ended up using:
gtf <- rtracklayer::import("/path/to/gtf")
#/ get a unique transcript2gene mapping table.
tx2gene <- unique(data.frame(gtf[gtf$type=="exon"])[,c("transcript_id", "gene_id")])
head(tx2gene)

#Next I followed this tutorial https://hbctraining.github.io/DGE_workshop_salmon/lessons/01_DGE_setup_and_overview.html to connect to my files

#first we need to specify the file path and gather the names of the files into a vector:
samples <- list.files(path = "./", full.names = T, pattern="*_quant")
files <- file.path(samples, "quant.sf")

names(files) <- str_replace(samples, "./", "") %>% 
     str_replace("._quant", "")
     
txi <- tximport(files, type="salmon", tx2gene=tx2gene[,c("transcript_id", "gene_id")], countsFromAbundance="lengthScaledTPM")

